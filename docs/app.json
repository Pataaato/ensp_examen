[{"name":"app.R","content":"\nlibrary(shiny)\nlibrary(usethis)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(glue)\nlibrary(DT)\nlibrary(bslib)\nlibrary(thematic)\nlibrary(shinylive)\nlibrary(rsconnect)\n\ndata(\"diamonds\")\nthematic_shiny(font = \"auto\")\nui <- fluidPage(\n  theme = bs_theme(version = 5, bootswatch = \"minty\"),\n  h2(\"Exploration des Diamants\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      radioButtons(\n        inputId = \"couleur_rose\", \n        label = \"Colorier les points en rose ?\",\n        choices = c(\"Oui\", \"Non\"), \n        selected = \"Oui\"\n        ), \n      \n      selectInput(\n        inputId = \"filtre_couleurs\",\n        choices = c(\"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"),\n        label = \"Choisir une couleur Ã  filtrer :\"), \n      \n      sliderInput(\n        inputId = \"prix\",\n        label = \"Prix maximum :\",\n        min = 300,\n        max = 20000,\n        value = 5000), \n      \n      actionButton(\n        inputId = \"boutton\", \n        label = \"Afficher une notification\"\n      )),\n    mainPanel(\n      plotOutput(\"diamondsPlot\"),\n      DTOutput(\"diamonds_table\")\n        )\n    )\n)\n\n\nserver <- function(input, output, session) {\n  data_filtered <- reactive({\n    diamonds %>%\n      filter(color == input$filtre_couleurs, price <= input$prix) %>%\n      select(carat, cut, color, clarity, depth, table, price)\n  })\n  output$diamondsPlot <- renderPlot({\n    ggplot(data_filtered(), aes(x = carat, y = price)) +\n      geom_point(color = ifelse(input$couleur_rose == \"Oui\", \"pink\", \"#5a5a5a\")) +\n      labs(\n        title = glue(\"prix: {input$prix} & color: {input$filtre_couleurs}\"),\n        x = \"carat\",\n        y = \"price\") +\n      theme_minimal()+\n      theme(\n        text = element_text(family = \"Monaco\", size = 11),\n        title = element_text(family = \"Monaco\", color = \"grey\", size = 11),  \n        axis.text = element_text(family = \"Monaco\", color = \"grey\", size = 11),  \n        axis.title = element_text(family = \"Monaco\", color = \"grey\", size = 11),  \n        panel.background = element_rect(family = \"Monaco\", fill = \"#f0f0f0\", color = NA),\n        plot.background = element_rect(family = \"Monaco\", fill = \"white\", color = NA),\n        panel.grid.major = element_line(color = \"white\"),\n        panel.grid.minor = element_line(color = \"white\")\n      )\n  })\n  output$diamonds_table <- renderDT({\n    datatable(data_filtered())\n  })\n  \n  observeEvent(input$boutton, {\n    showNotification(glue(\"prix: {input$prix} & color: {input$filtre_couleurs}\"), type = \"message\")\n  })\n}\n\nshinyApp(ui = ui, server = server)","type":"text"},{"name":"project.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
